#+TITLE:       异步安装 emacs package
#+AUTHOR:      皐月中二
#+EMAIL:       kuangdash@163.com
#+DATE:        2015-06-01 周一

 #+URI:         /blog/%y/%m/%d/异步安装-emacs-package
 #+KEYWORDS:    asynchronization, package install
 #+TAGS:        asynchronization, package install
 #+DESCRIPTION: install packages asynchronically

#+LANGUAGE:    zh-CN
#+OPTIONS:     H:4 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:t

这里将分享两段代码，说明如何在 emacs 24 中异步安装 packages （我想大部分人都有等待 list-packages 命令的经历，在 emacs 25 里面已经解决了这个问题，但对于目前使用 emacs 24 的同学，这篇 blog 还是有些用处的吧。）

#+BEGIN_HTML
<p class="center">
<a href="https://github.com/emacs-china/emacs-china.github.io/edit/source/blog/KuangDash/async-package-install.org">点我修改</a><br/>
</p>
#+END_HTML

* 先决条件 ~ prerequisite
首先，这个解决方法依赖 [[https://github.com/jwiegley/emacs-async][async]] 包。（如果你的 emacs 上安装了 helm ，那么就不必担心这个依赖了。helm 自带该包）
#+BEGIN_SRC emacs-lisp
  (require 'async)
#+END_SRC

* 替代 list-packages 的命令 ~ the command used to replace =list-packages=
这里我取名叫 =kd/list-packages= ，可以选个你喜欢的名字
#+BEGIN_SRC emacs-lisp
  (defun kd/list-packages ()
    "package-install async"
    (interactive)
    (async-start
     `(lambda ()
        (setq package-archives
              '(("gnu"         . "http://elpa.gnu.org/packages/"); 这里是你的包 ‘源’
                ("org"         . "http://orgmode.org/elpa/")
                ("melpa"       . "http://melpa.milkbox.net/packages/")
                ("marmalade"   . "http://marmalade-repo.org/packages/"))); 或者用 ,package-archives 替代掉这个列表，这点具体见 kd/package-install
        (require 'finder-inf nil t)
        ;; Initialize the package system if necessary.
        (package-initialize t)
        (setq coding-system-for-write 'utf-8-unix)
        (let (old-archives new-packages)
          ;; Read the locally-cached archive-contents.
          (package-read-all-archive-contents)
          (setq old-archives package-archive-contents)
          ;; Fetch the remote list of packages.
          (package-refresh-contents)
          ;; Find which packages are new.
          (dolist (elt package-archive-contents)
            (unless (assq (car elt) old-archives)
              (push (car elt) new-packages)))
          (setq result-prev (list new-packages package-archive-contents))))
     `(lambda (result)
        (setq package-archive-contents (cadr result))
        (let ((new-packages (car result)))
          ;; Generate the Package Menu.
          (let ((buf (get-buffer-create "*Packages*")))
            (with-current-buffer buf
              (package-menu-mode)
              (set (make-local-variable 'package-menu--new-package-list)
                   new-packages)
              (package-menu--generate nil t))
            ;; The package menu buffer has keybindings.  If the user types
            ;; `M-x kd/list-packages', that suggests it should become current.
            (switch-to-buffer buf))

          (let ((upgrades (package-menu--find-upgrades)))
            (if upgrades
                (message "%d package%s can be upgraded; type `%s' to mark %s for upgrading."
                         (length upgrades)
                         (if (= (length upgrades) 1) "" "s")
                         (substitute-command-keys "\\[package-menu-mark-upgrades]")
                         (if (= (length upgrades) 1) "it" "them"))))))))
#+END_SRC

* 用于替代 package-install 的命令 ~ the command used to replace =package-install=
这个是 [[https://github.com/lujun9972][darksun]] 君写的命令，有问题的话不要怪我唷。
#+BEGIN_SRC emacs-lisp
  (defun kd/package-install (package-quote)
    "package-install async"
    (interactive (list (read-string "package-name? " "'")))
    (async-start
     `(lambda ()
        (setq package-archives ,package-archives)
        (package-initialize t)
        (package-install ,(read package-quote)))
     `(lambda (result)
        (package-initialize nil)
        (message "done, this is %s" result))))
#+END_SRC
